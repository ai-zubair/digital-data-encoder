{"mappings":"YAAA,SAASA,EAAuBC,GAC9B,OAAOA,GAAKA,EAAEC,WAAaD,EAAEE,QAAUF,ECCzC,IAAIG,EAAU,IAEd,SAAkBC,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KCRlCE,CAAsCC,KAAKC,MAAM,mFCAhC,4nvBCALC,EAAAA,EAKAC,EAAAA,EAKAC,EAAAA,w3BAVAF,EAAAA,IAAAA,uDAAAA,6CAKAC,EAAAA,IAAAA,iCAAAA,6BAKAC,EAAAA,IAAAA,qCAAAA,sCAAAA,gCAAAA,w2CCLNC,wQAIJ,SAAAA,IAAa,IAAAC,EAAA,mGAAAC,CAAAC,KAAAH,GAAAI,EAAAC,EACXJ,EAAAK,EAAAC,KAAAJ,KAAAK,IADW,uBAF0B,GAE1BJ,EAAAC,EAAAJ,GAAA,iBAMG,WAAY,IAAAQ,GACV,QAAAA,EAAGR,EAAKS,kBAAR,IAAAD,OAAA,EAAGA,EAAiBE,cAAc,iBACvCC,iBAAiB,SAAQ,WAAI,IAAAC,EAChCC,EAAyB,IAAIC,YAAYC,EAAUC,sBAAsB,CAC7EC,OAAO,CACLC,kBAAmBC,EAAiBC,oBAGxC,QAAAR,EAAAZ,EAAKqB,qBAAL,IAAAT,GAAAA,EAAoBU,cAAcT,SAdzBV,EAAAC,EAAAJ,GAAA,sBAuBQ,WAAU,IAAAuB,EASzBC,EAREC,EAAW,QAAAF,EAAGvB,EAAKS,kBAAR,IAAAc,OAAA,EAAGA,EAAiBG,iBAAiB,sBAEhDC,EAAiB,CAAC,UAAU,OAAO,WACnCC,EAAoBD,EAAeE,KAAK,IACxCC,EAAoBF,EAAkBpC,OAExCuC,EAAkB,EAClBC,EAAgB,GAGG,SAAjBC,IAEJ,IAAMC,IADNF,EACqD,GAAM,EAC3D,GAAID,GAAmBD,EACrB9B,EAAKmC,qBAAsB,EAC3BC,qBAAqBZ,OAClB,CACH,GAAGU,EAA4B,CAC7B,IAAMG,EAA0BN,EAC1BO,EAAkBV,EAAkBW,UAAU,EAAGF,EAAwB,GAC/EN,IACA,IACMS,EAAkBF,ECvDN,SAAEG,GAE5B,IADA,IAAIC,EAAe,GACVlD,EAAS,EAAGA,EAASiD,EAAcjD,IAAU,CAEpDkD,GADkBC,KAAKC,MAAoB,EAAdD,KAAKE,UAGpC,OAAOH,EDgDyBI,CAAahB,EAAoBC,GAEzDN,MAAAA,GAAAA,EAAasB,SAAS,SAACC,EAAYC,GACjC,IAAMC,EAAuBtB,EAAkBuB,QAAQxB,EAAesB,IAChEG,EAAqBF,EAAuBvB,EAAesB,GAAWzD,OAC5EwD,EAAWK,UAAYb,EAAgBD,UAAUW,EAAqBE,MAG1E5B,EAAmB8B,sBAAsBrB,IAG7CA,MAxDW9B,EAAAC,EAAAJ,GAAA,wBA2DU,WACrB,IAAMS,EAAaT,EAAKS,WAClBgB,EAAchB,MAAAA,OAAH,EAAGA,EAAYiB,iBAAiB,sBACjD4B,uBAAsB,WACpB,IAAK,IAAIL,EAAY,EAAGA,EAAYxB,EAAYjC,OAAQyD,IACtDxB,EAAYwB,GAAWM,UAAUC,IAAI,sBAhE9BrD,EAAAC,EAAAJ,GAAA,kBAqEI,WACf,GAAIA,EAAKmC,oBAEJ,CAAA,IAAAsB,EAAAC,GACa,QAAAD,EAAGzD,EAAKS,kBAAR,IAAAgD,OAAA,EAAGA,EAAiBE,eAAe,gBACxCJ,UAAUC,IAAI,WACzB,IAAMI,EAA0B,IAAI9C,YAAYC,EAAU8C,oBAC1D,QAAAH,EAAA1D,EAAKqB,qBAAL,IAAAqC,GAAAA,EAAoBpC,cAAcsC,QALlCN,sBAAsBtD,EAAK8D,mBAvElB3D,EAAAC,EAAAJ,GAAA,UAgFJ,WACPA,EAAK+D,qBACL/D,EAAKgE,uBACLhE,EAAK8D,oBAjFL9D,EAAKiE,gBAFMjE,2DAoBXE,KAAKgE,uDE7BQ,+3GCKXC,WAAAA,EAAAA,aAAAA,mFAMU,SAAAC,EAAAC,EAAAC,GAMoBtD,OANpBoD,EAMPzD,OAAAA,gBAAiB,SAAA0D,EAAAC,GAAUtD,OAAVqD,EAAAE,UAAUvD,EAAAA,IACEC,EAAAA,GAAOC,SAAAA,EACfA,GAF1B,IAIAsD,EAVY,WAAA,GAoBa,oBAANC,UAAMA,QAAAC,UAAA,OACnBC,EAAAA,GAAAA,QAAaD,UAAAE,KAAG,OAAKnE,EAAAA,GAAR,mBAAAoE,MAAA,OAAA,EAAA,IACC,OADDC,KAAGC,UAAAC,SAAiBrB,KAAAA,QAAee,UAAAI,KACtD,IAAMG,iBAAc,EAAA,MAAAC,GAAG,OAAKzE,GAZN0E,GAAUtB,OAAoB,WAAS,IAAAuB,EAAAC,EAAAC,EAAAC,GAAA,GAC3Df,EAAA,CAAA,IAAAgB,EAAAF,EAAApF,MAAAuF,YAAAL,EAAAX,QAAAC,UAAAW,EAAAK,UAAAF,QAAAJ,EAAAC,EAAAM,MAAMC,KAANF,WAAA,OAAAG,EAAkBC,KAAAA,IAAgB,SAAlCD,EACAE,EAAAzF,GAAA,OAAAA,GAAA,WAAA0F,EAAA1F,IAAA,mBAAAA,EAAMsF,EAANG,GAAAzF,EAAA,SAAA2F,EAA+BF,GAAA,QAAA,IAAAA,EAAA,MAAcG,IAAAA,eAAiBC,6DAZpD,OAAAJ,EAsBQ,SAAAT,EAAGjB,GAE2B,OAF3BiB,EACjBc,OAAAA,eAA6B9G,OAAC+G,eAAkBC,SACjDV,GAAL,OAAkBX,EAAAA,WAAeoB,OAAAA,eAA2BhC,KAG5DA,GAAA,SAAAkC,EACQC,EAAAA,EAAAA,GACkDC,OAD/BL,KAAAA,EAAcM,OAAAA,eACvCF,EAAAA,EAAAA,CAAAA,MAAiBG,EAAAA,YAAa,EAAAC,cAAA,EAAAC,UAAA,IAAAC,EAAcC,GAAAA,EAAYN,EAAxD,MACGO,EACgBL,SAAAA,IA/BT,SAJgCM,EAAAC,GAAA,GAAA,mBAAAA,GAIhC,OAJiDnH,EAIjD,MAAA,IAAAoH,UAAA,sDAAAF,EAAAlC,UAAAzF,OAAA8H,OAAAF,GAAAA,EAAAnC,UAAA,CAAAU,YAAA,CAAA4B,MAAAJ,EAAAJ,UAAA,EAAAD,cAAA,KAAAM,GAAA9C,EAAA6C,EAAAC,GA+B+BI,CAERd,EACjCE,GACD,IAnCHa,EAAcC,EAAAC,EAAApH,EAAAqH,EAAAvD,GAAA,SAAAA,IAAA,IAAAnE,qGAAA2H,CAuCQlB,KAAAA,GACYmB,EAChCC,EAFsD7H,EAAAK,EAAAC,KAAAJ,KAAA4H,IAGtBF,oBAAanB,EAE7C1G,eAAAwG,EAAAN,EAAAjG,GAAA,aAAA,MAAAuG,EAAAN,EAAAjG,GAAA,eAAkB2G,IAAlBJ,EAA+BN,EAC1BE,GAAoBM,iBA3CpBxC,WAAAA,EAFOtD,4DAgBMoH,EACbC,OAAAA,2jCAjBPT,KAAcC,4EAAAS,EACZV,EAAAxC,UAAAyC,GAAAC,GAAAQ,EADYV,EAAAE,KA+BSd,osBC1CR","sources":["./Users/zubairbashir/Documents/digital-data-encoder/node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./node_modules/@parcel/runtime-js/lib/bundles/1e76d830d01d77bf32a0bba4578904e7.js","./src/ts/components/common/appConstants.ts","./src/ts/components/LandingBanner/LandingBanner.ts","./src/ts/components/common/utilityMethods.ts","./node_modules/@parcel/runtime-js/lib/bundles/beb5e3b74526fb58d85821b0cd9d9181.js","./src/ts/components/AppWrapper/AppWrapper.ts","./node_modules/@parcel/runtime-js/lib/bundles/ad95bcdb42900912992996e69229b4b0.js"],"sourcesContent":[null,"\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n};\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path.default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path.default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        assets.push(...getLoaderRuntimes({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        }));\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows.default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let main = b.getMainEntry();\n        return main && bundleGroup.entryAssetId === main.id;\n      }));\n\n      if (mainBundle.isInline) {\n        assets.push({\n          filePath: _path.default.join(__dirname, `/bundles/${mainBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntimes({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let assets = []; // Sort so the bundles containing the entry asset appear last\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  }\n\n  let loaders = getLoaders(bundle.env); // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = loaders ? externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows.default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean) : [];\n\n  if (loaderModules.length > 0) {\n    let loaders = loaderModules.join(', ');\n\n    if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n      loaders = `Promise.all([${loaders}])`;\n\n      if (bundle.env.outputFormat !== 'global') {\n        loaders += `.then(r => r[r.length - 1])`;\n      }\n    } else {\n      loaders = `(${loaders})`;\n    }\n\n    if (bundle.env.outputFormat === 'global') {\n      loaders += `.then(() => parcelRequire('${bundleGroup.entryAssetId}')${// In global output with scope hoisting, functions return exports are\n      // always returned. Otherwise, the exports are returned.\n      bundle.env.scopeHoist ? '()' : ''})`;\n    }\n\n    assets.push({\n      filePath: __filename,\n      code: `module.exports = ${loaders};`,\n      dependency\n    });\n  }\n\n  return assets;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  return bundle.isEntry || bundleGraph.getParentBundles(bundle).some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[getPublicBundleId(bundle)] = (0, _nullthrows.default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(getPublicBundleId(from))}, ${JSON.stringify(getPublicBundleId(to))})`;\n  }\n\n  return JSON.stringify((0, _utils.relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}\n\nfunction getPublicBundleId(bundle) {\n  return bundle.id.slice(-16);\n}",null,"export enum AppEvents{\n  ActiveComponentChange = \"active-component-change\",\n  LandingBannerShown = \"landing-banner-shown\"\n}\n\nexport enum AppAttributes{\n  ComponentId = \"componentid\",\n  ActiveCrumb = \"activecrumb\"\n}\n\nexport enum AppComponentName{\n  LandingBanner = \"LandingBanner\",\n  StreamLengthForm = \"StreamLengthForm\",\n  StreamBitForm = \"StreamBitForm\",\n  EncoderScreen = \"EncoderScreen\"\n}","import { CustomElement } from '../CustomElement/CustomElement';\nimport { landingBannerContent } from \"./landingBannerContent\";\nimport { AppComponentName, AppEvents } from '../common/appConstants';\nimport { getRandomBit } from '../common/utilityMethods';\n\nclass LandingBanner extends CustomElement{\n\n  private bannerTextDecrypted: boolean = false;\n\n  constructor(){\n    super(landingBannerContent);\n    this.bindListeners();\n    \n  }\n\n  bindListeners = (): void => {\n    const nextButton = this.shadowRoot?.querySelector(\".button-text\") as HTMLButtonElement;\n    nextButton.addEventListener(\"click\",()=>{\n      const activeChildChangeEvent = new CustomEvent(AppEvents.ActiveComponentChange,{\n        detail:{\n          targetComponentID: AppComponentName.StreamLengthForm\n        }\n      })\n      this.parentElement?.dispatchEvent(activeChildChangeEvent);\n    })\n\n  }\n\n  connectedCallback():void{\n    this.render();\n  }\n\n  showDecryptingText = ():void =>{\n    const bannerWords = this.shadowRoot?.querySelectorAll(\".landing-text-word\");\n    \n    const decryptedWords = [\"DIGITAL\",\"DATA\",\"ENCODER\"];\n    const stringToDecrpytTo = decryptedWords.join(\"\");\n    const totalStringLength = stringToDecrpytTo.length;\n\n    let decryptedLength = 0;\n    let framesElapsed = 0;\n    let animationFrameID: number;\n\n    const decryptingText = (): void=>{\n      framesElapsed++;\n      const decryptCharacterInThisFrame = (framesElapsed % 4 === 0) ? true : false;\n      if( decryptedLength >= totalStringLength ){\n        this.bannerTextDecrypted = true;\n        cancelAnimationFrame(animationFrameID);\n      }else{\n        if(decryptCharacterInThisFrame){\n          const decryptedCharacterIndex = decryptedLength;\n          const decryptedString = stringToDecrpytTo.substring(0, decryptedCharacterIndex+1);\n          decryptedLength++;\n          const encryptedString = getRandomBit(totalStringLength - decryptedLength);\n          const newTargetString = decryptedString + encryptedString;\n          bannerWords?.forEach( (bannerWord, wordIndex) => {\n            const bannerWordStartIndex = stringToDecrpytTo.indexOf(decryptedWords[wordIndex]);\n            const bannerWordEndIndex = bannerWordStartIndex + decryptedWords[wordIndex].length;\n            bannerWord.innerHTML = newTargetString.substring(bannerWordStartIndex,bannerWordEndIndex);\n          })\n        }\n        animationFrameID = requestAnimationFrame(decryptingText);\n      }\n    }\n    decryptingText();\n  }\n  \n  drawSignaLikeBorders = (): void => {\n    const shadowRoot = this.shadowRoot as ShadowRoot;\n    const bannerWords = shadowRoot?.querySelectorAll(\".landing-text-word\");\n    requestAnimationFrame(()=>{\n      for (let wordIndex = 0; wordIndex < bannerWords.length; wordIndex++) {\n        bannerWords[wordIndex].classList.add(\"draw-borders\");\n      }\n    })\n  }\n\n  showNextButton = () => {\n    if(!this.bannerTextDecrypted) {\n      requestAnimationFrame(this.showNextButton);\n    }else{\n      const nextButton = this.shadowRoot?.getElementById(\"next-button\") as HTMLButtonElement;\n      nextButton.classList.add(\"pop-out\");\n      const landingBannerShownEvent = new CustomEvent(AppEvents.LandingBannerShown);\n      this.parentElement?.dispatchEvent(landingBannerShownEvent);\n    }\n  }\n\n  render = (): void => {\n    this.showDecryptingText();\n    this.drawSignaLikeBorders();\n    this.showNextButton();\n  }\n\n}\n\nexport { LandingBanner }","export const getRandomBit = ( stringLength: number ): string => {\n  let randomString = \"\"\n  for (let length = 0; length < stringLength; length++) {\n    const randomBit = Math.floor(Math.random()*2);\n    randomString+=randomBit;\n  }\n  return randomString;\n}",null,"import { CustomElement } from '../CustomElement/CustomElement';\nimport { appWrapperContent } from \"./appWrapperContent\";\nimport { AppComponentName, AppEvents, AppAttributes } from '../common/appConstants';\nimport { BreadCrumb } from '../BreadCrumb/BreadCrumb';\n\nclass AppWrapper extends CustomElement{\n\n  private activeComponentID: AppComponentName = AppComponentName.LandingBanner;\n  private breadCrumb: Element | null = null;\n  private componentMap: { [key: string]: Element } = {};\n\n  constructor() {\n    super(appWrapperContent);\n    this.bindListeners();\n  }\n\n  bindListeners = (): void => {\n    this.addEventListener(AppEvents.ActiveComponentChange,((event: CustomEvent)=>{\n      const targetComponentID = event.detail.targetComponentID;\n      this.setActiveComponent(targetComponentID);\n    }) as EventListener);\n    this.addEventListener(AppEvents.LandingBannerShown,((event)=>{\n      this?.breadCrumb?.removeAttribute(\"isHidden\");\n      this?.breadCrumb?.setAttribute(AppAttributes.ActiveCrumb,this.activeComponentID);\n    }) as EventListener)\n  }\n\n  connectedCallback() {\n    this.createComponentMap();\n  }\n\n  createComponentMap = () => {\n    const componentSlot = this.shadowRoot?.getElementById(\"component-slot\") as HTMLSlotElement;\n    const breadCrumbSlot = this.shadowRoot?.getElementById(\"bread-crumb-slot\") as HTMLSlotElement;\n    const appComponents = componentSlot.assignedElements({flatten: true});\n    this.breadCrumb = breadCrumbSlot.assignedElements({flatten: true})[0];\n    let componentIndex = 0;\n    \n    for (const componentID in AppComponentName) {\n      const currentComponent = appComponents[componentIndex];\n      currentComponent.setAttribute(AppAttributes.ComponentId,componentID);\n      if(this.activeComponentID === componentID){\n        currentComponent.setAttribute(\"active\",\"true\");\n      }\n      this.componentMap[componentID] = currentComponent;\n      componentIndex++;\n    }\n\n  }\n\n  setActiveComponent = (componentID: AppComponentName) => {\n    const oldActiveComponent = this.componentMap[this.activeComponentID];\n    oldActiveComponent.removeAttribute(\"active\");\n    const newActiveComponent = this.componentMap[componentID];\n    newActiveComponent.setAttribute(\"active\",\"true\");\n    this?.breadCrumb?.setAttribute(AppAttributes.ActiveCrumb, componentID);\n    this.activeComponentID = componentID;\n  }\n}\n\nexport { AppWrapper }",null],"names":["$parcel$interopDefault","a","__esModule","default","mapping","pairs","keys","Object","i","length","$c2c7fbc8b68410859ec0d9fc415444c7$export$register","JSON","parse","AppEvents","AppAttributes","AppComponentName","LandingBanner","_this","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_classCallCheck","this","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_defineProperty","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_assertThisInitialized","_super","call","$a0531ed6a0e23efdcb2a2d7ca37a64bb$export$landingBannerContent","_this$shadowRoot","shadowRoot","querySelector","addEventListener","_this$parentElement","activeChildChangeEvent","CustomEvent","$e62f65a8fb982ccc5ea909f4a3013df$export$AppEvents","ActiveComponentChange","detail","targetComponentID","$e62f65a8fb982ccc5ea909f4a3013df$export$AppComponentName","StreamLengthForm","parentElement","dispatchEvent","_this$shadowRoot2","animationFrameID","bannerWords","querySelectorAll","decryptedWords","stringToDecrpytTo","join","totalStringLength","decryptedLength","framesElapsed","decryptingText","decryptCharacterInThisFrame","bannerTextDecrypted","cancelAnimationFrame","decryptedCharacterIndex","decryptedString","substring","newTargetString","stringLength","randomString","Math","floor","random","$d69be000e51c8bc9ea87ab4$export$getRandomBit","forEach","bannerWord","wordIndex","bannerWordStartIndex","indexOf","bannerWordEndIndex","innerHTML","requestAnimationFrame","classList","add","_this$shadowRoot3","_this$parentElement2","getElementById","landingBannerShownEvent","LandingBannerShown","showNextButton","showDecryptingText","drawSignaLikeBorders","bindListeners","render","AppWrapper","$d332527a228a3dbfd3b615532$var$_setPrototypeOf","o","p","__proto__","hasNativeReflectConstruct","Reflect","construct","componentSlot","sham","Proxy","Date","prototype","toString","breadCrumbSlot","e","$d332527a228a3dbfd3b615532$var$_isNativeReflectConstruct","result","Super","$d332527a228a3dbfd3b615532$var$_getPrototypeOf","Derived","NewTarget","constructor","arguments","apply","breadCrumb","$d332527a228a3dbfd3b615532$var$_possibleConstructorReturn","removeAttribute","self","$d332527a228a3dbfd3b615532$var$_typeof","$d332527a228a3dbfd3b615532$var$_assertThisInitialized","ActiveCrumb","activeComponentID","appComponents","assignedElements","flatten","$d332527a228a3dbfd3b615532$var$_defineProperty","currentComponent","componentID","componentIndex","setAttribute","configurable","writable","obj","ComponentId","$d332527a228a3dbfd3b615532$export$AppWrapper","subClass","superClass","TypeError","create","value","$d332527a228a3dbfd3b615532$var$_inherits","Constructor","protoProps","staticProps","$d332527a228a3dbfd3b615532$var$_createSuper","$d332527a228a3dbfd3b615532$var$_classCallCheck","componentMap","oldActiveComponent","$c0e232a5080d017b6169bb90c74$export$appWrapperContent","event","createComponentMap","$d332527a228a3dbfd3b615532$var$_defineProperties"],"version":3,"file":"ts.3de1e86c.js.map"}