{"mappings":"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","sources":["./Users/zubairbashir/Documents/digital-data-encoder/node_modules/@parcel/scope-hoisting/lib/helpers.js","./node_modules/@parcel/runtime-js/lib/bundle-manifest.js","./node_modules/@parcel/runtime-js/lib/JSRuntime.js","./src/ts/components/utils.ts","./node_modules/@parcel/runtime-js/lib/bundles/1e76d830d01d77bf32a0bba4578904e7.js","./src/ts/components/LandingBanner/LandingBanner.ts","./node_modules/@parcel/runtime-js/lib/bundles/beb5e3b74526fb58d85821b0cd9d9181.js","./src/ts/components/AppWrapper/AppWrapper.ts","./src/ts/components/BreadCrumb/constants.ts","./src/ts/components/BreadCrumb/breadCrumbContent.ts","./node_modules/@parcel/runtime-js/lib/bundles/ad95bcdb42900912992996e69229b4b0.js","./src/ts/components/BreadCrumb/BreadCrumb.ts","./src/ts/index.ts"],"sourcesContent":[null,"\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _plugin = require(\"@parcel/plugin\");\n\nvar _utils = require(\"@parcel/utils\");\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _nullthrows = _interopRequireDefault(require(\"nullthrows\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// List of browsers that support dynamic import natively\n// https://caniuse.com/#feat=es6-module-dynamic-import\nconst DYNAMIC_IMPORT_BROWSERS = {\n  edge: '76',\n  firefox: '67',\n  chrome: '63',\n  safari: '11.1',\n  opera: '50'\n};\nconst LOADERS = {\n  browser: {\n    css: './loaders/browser/css-loader',\n    html: './loaders/browser/html-loader',\n    js: './loaders/browser/js-loader',\n    wasm: './loaders/browser/wasm-loader',\n    IMPORT_POLYFILL: './loaders/browser/import-polyfill'\n  },\n  worker: {\n    js: './loaders/worker/js-loader',\n    wasm: './loaders/worker/wasm-loader',\n    IMPORT_POLYFILL: false\n  },\n  node: {\n    css: './loaders/node/css-loader',\n    html: './loaders/node/html-loader',\n    js: './loaders/node/js-loader',\n    wasm: './loaders/node/wasm-loader',\n    IMPORT_POLYFILL: null\n  }\n};\n\nfunction getLoaders(ctx) {\n  if (ctx.isWorker()) return LOADERS.worker;\n  if (ctx.isBrowser()) return LOADERS.browser;\n  if (ctx.isNode()) return LOADERS.node;\n  return null;\n}\n\nvar _default = new _plugin.Runtime({\n  apply({\n    bundle,\n    bundleGraph,\n    options\n  }) {\n    // Dependency ids in code replaced with referenced bundle names\n    // Loader runtime added for bundle groups that don't have a native loader (e.g. HTML/CSS/Worker - isURL?),\n    // and which are not loaded by a parent bundle.\n    // Loaders also added for modules that were moved to a separate bundle because they are a different type\n    // (e.g. WASM, HTML). These should be preloaded prior to the bundle being executed. Replace the entry asset(s)\n    // with the preload module.\n    if (bundle.type !== 'js') {\n      return;\n    }\n\n    let asyncDependencies = [];\n    let otherDependencies = [];\n    bundle.traverse(node => {\n      if (node.type !== 'dependency') {\n        return;\n      }\n\n      let dependency = node.value;\n\n      if (dependency.isAsync && !dependency.isURL) {\n        asyncDependencies.push(dependency);\n      } else {\n        otherDependencies.push(dependency);\n      }\n    });\n    let assets = [];\n\n    for (let dependency of asyncDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (resolved == null) {\n        continue;\n      }\n\n      if (resolved.type === 'asset') {\n        // If this bundle already has the asset this dependency references,\n        // return a simple runtime of `Promise.resolve(require(\"path/to/asset\"))`.\n        assets.push({\n          filePath: _path.default.join(options.projectRoot, 'JSRuntime.js'),\n          // Using Promise['resolve'] to prevent Parcel from inferring this is an async dependency.\n          // TODO: Find a better way of doing this.\n          code: `module.exports = Promise['resolve'](require(${JSON.stringify('./' + _path.default.relative(options.projectRoot, resolved.value.filePath))}))`,\n          dependency\n        });\n      } else {\n        assets.push(...getLoaderRuntimes({\n          bundle,\n          dependency,\n          bundleGraph,\n          bundleGroup: resolved.value\n        }));\n      }\n    }\n\n    for (let dependency of otherDependencies) {\n      let resolved = bundleGraph.resolveExternalDependency(dependency, bundle);\n\n      if (dependency.isURL && resolved == null) {\n        // If a URL dependency was not able to be resolved, add a runtime that\n        // exports the original moduleSpecifier.\n        assets.push({\n          filePath: __filename,\n          code: `module.exports = ${JSON.stringify(dependency.moduleSpecifier)}`,\n          dependency\n        });\n        continue;\n      }\n\n      if (resolved == null || resolved.type !== 'bundle_group') {\n        continue;\n      }\n\n      let bundleGroup = resolved.value;\n      let mainBundle = (0, _nullthrows.default)(bundleGraph.getBundlesInBundleGroup(bundleGroup).find(b => {\n        let main = b.getMainEntry();\n        return main && bundleGroup.entryAssetId === main.id;\n      }));\n\n      if (mainBundle.isInline) {\n        assets.push({\n          filePath: _path.default.join(__dirname, `/bundles/${mainBundle.id}.js`),\n          code: `module.exports = ${JSON.stringify(dependency.id)};`,\n          dependency\n        });\n        continue;\n      } // URL dependency or not, fall back to including a runtime that exports the url\n\n\n      assets.push(getURLRuntime(dependency, bundle, mainBundle));\n    }\n\n    if (shouldUseRuntimeManifest(bundle) && bundleGraph.getChildBundles(bundle).length > 0 && isNewContext(bundle, bundleGraph)) {\n      assets.push({\n        filePath: __filename,\n        code: getRegisterCode(bundle, bundleGraph),\n        isEntry: true\n      });\n    }\n\n    return assets;\n  }\n\n});\n\nexports.default = _default;\n\nfunction getLoaderRuntimes({\n  bundle,\n  dependency,\n  bundleGroup,\n  bundleGraph\n}) {\n  let assets = []; // Sort so the bundles containing the entry asset appear last\n\n  let externalBundles = bundleGraph.getBundlesInBundleGroup(bundleGroup).filter(bundle => !bundle.isInline).sort(bundle => bundle.getEntryAssets().map(asset => asset.id).includes(bundleGroup.entryAssetId) ? 1 : -1); // CommonJS is a synchronous module system, so there is no need to load bundles in parallel.\n  // Importing of the other bundles will be handled by the bundle group entry.\n  // Do the same thing in library mode for ES modules, as we are building for another bundler\n  // and the imports for sibling bundles will be in the target bundle.\n\n  if (bundle.env.outputFormat === 'commonjs' || bundle.env.isLibrary) {\n    externalBundles = externalBundles.slice(-1);\n  }\n\n  let loaders = getLoaders(bundle.env); // Determine if we need to add a dynamic import() polyfill, or if all target browsers support it natively.\n\n  let needsDynamicImportPolyfill = false;\n\n  if (bundle.env.isBrowser() && bundle.env.outputFormat === 'esmodule') {\n    needsDynamicImportPolyfill = !bundle.env.matchesEngines(DYNAMIC_IMPORT_BROWSERS);\n  }\n\n  let loaderModules = loaders ? externalBundles.map(to => {\n    let loader = loaders[to.type];\n\n    if (!loader) {\n      return;\n    }\n\n    let relativePathExpr = getRelativePathExpr(bundle, to); // Use esmodule loader if possible\n\n    if (to.type === 'js' && to.env.outputFormat === 'esmodule') {\n      if (!needsDynamicImportPolyfill) {\n        return `import(\"./\" + ${relativePathExpr})`;\n      }\n\n      loader = (0, _nullthrows.default)(loaders.IMPORT_POLYFILL, `No import() polyfill available for context '${bundle.env.context}'`);\n    } else if (to.type === 'js' && to.env.outputFormat === 'commonjs') {\n      return `Promise.resolve(require(\"./\" + ${relativePathExpr}))`;\n    }\n\n    return `require(${JSON.stringify(loader)})(require('./bundle-url').getBundleURL() + ${relativePathExpr})`;\n  }).filter(Boolean) : [];\n\n  if (loaderModules.length > 0) {\n    let loaders = loaderModules.join(', ');\n\n    if (loaderModules.length > 1 && (bundle.env.outputFormat === 'global' || !externalBundles.every(b => b.type === 'js'))) {\n      loaders = `Promise.all([${loaders}])`;\n\n      if (bundle.env.outputFormat !== 'global') {\n        loaders += `.then(r => r[r.length - 1])`;\n      }\n    } else {\n      loaders = `(${loaders})`;\n    }\n\n    if (bundle.env.outputFormat === 'global') {\n      loaders += `.then(() => parcelRequire('${bundleGroup.entryAssetId}')${// In global output with scope hoisting, functions return exports are\n      // always returned. Otherwise, the exports are returned.\n      bundle.env.scopeHoist ? '()' : ''})`;\n    }\n\n    assets.push({\n      filePath: __filename,\n      code: `module.exports = ${loaders};`,\n      dependency\n    });\n  }\n\n  return assets;\n}\n\nfunction isNewContext(bundle, bundleGraph) {\n  return bundle.isEntry || bundleGraph.getParentBundles(bundle).some(parent => parent.env.context !== bundle.env.context || parent.type !== 'js');\n}\n\nfunction getURLRuntime(dependency, from, to) {\n  let relativePathExpr = getRelativePathExpr(from, to);\n\n  if (dependency.meta.webworker === true) {\n    return {\n      filePath: __filename,\n      code: `module.exports = require('./get-worker-url')(${relativePathExpr});`,\n      dependency\n    };\n  }\n\n  return {\n    filePath: __filename,\n    code: `module.exports = require('./bundle-url').getBundleURL() + ${relativePathExpr}`,\n    dependency\n  };\n}\n\nfunction getRegisterCode(entryBundle, bundleGraph) {\n  let idToName = {};\n  bundleGraph.traverseBundles((bundle, _, actions) => {\n    if (bundle.isInline) {\n      return;\n    }\n\n    idToName[getPublicBundleId(bundle)] = (0, _nullthrows.default)(bundle.name);\n\n    if (bundle !== entryBundle && isNewContext(bundle, bundleGraph)) {\n      // New contexts have their own manifests, so there's no need to continue.\n      actions.skipChildren();\n    }\n  }, entryBundle);\n  return \"require('./bundle-manifest').register(JSON.parse(\" + JSON.stringify(JSON.stringify(idToName)) + '));';\n}\n\nfunction getRelativePathExpr(from, to) {\n  if (shouldUseRuntimeManifest(from)) {\n    return `require('./relative-path')(${JSON.stringify(getPublicBundleId(from))}, ${JSON.stringify(getPublicBundleId(to))})`;\n  }\n\n  return JSON.stringify((0, _utils.relativeBundlePath)(from, to, {\n    leadingDotSlash: false\n  }));\n}\n\nfunction shouldUseRuntimeManifest(bundle) {\n  let env = bundle.env;\n  return !env.isLibrary && env.outputFormat === 'global' && env.isBrowser();\n}\n\nfunction getPublicBundleId(bundle) {\n  return bundle.id.slice(-16);\n}","export const getRandomBit = ( stringLength: number ): string => {\n  let randomString = \"\"\n  for (let length = 0; length < stringLength; length++) {\n    const randomBit = Math.floor(Math.random()*2);\n    randomString+=randomBit;\n  }\n  return randomString;\n}\n\nexport enum Events{\n  ActiveChildChange = \"active-child-change\",\n}",null,"import { landingBannerContent } from \"./landingBannerContent\";\nimport { getRandomBit, Events } from \"../utils\";\n\nclass LandingBanner extends HTMLElement{\n\n  private domContent: string = landingBannerContent;\n  private textDecrypted: boolean = false;\n  public isHidden: boolean = false;\n\n  constructor(){\n    super();\n    this.bindDomContent();\n    this.bindListeners();\n    \n  }\n\n  bindDomContent = ():void => {\n    const contentTemplate = document.createElement(\"template\");\n    contentTemplate.innerHTML = this.domContent;\n    const shadowRoot = this.attachShadow({mode: \"open\"});\n    shadowRoot.appendChild(contentTemplate.content.cloneNode(true));\n  }\n\n  bindListeners = (): void => {\n    const nextButton = this.shadowRoot?.querySelector(\".button-text\") as HTMLButtonElement;\n    nextButton.addEventListener(\"click\",()=>{\n      const activeChildChangeEvent = new CustomEvent(Events.ActiveChildChange,{\n        detail:{\n          sourceElement: this\n        }\n      })\n      this.parentElement?.dispatchEvent(activeChildChangeEvent);\n    })\n\n  }\n\n  connectedCallback():void{\n    this.render();\n  }\n\n  showDecryptingText = ():void =>{\n    const shadowRoot = this.shadowRoot as ShadowRoot;\n    const bannerWords = shadowRoot?.querySelectorAll(\".landing-text-word\");\n    \n    const decryptedWords = [\"DIGITAL\",\"DATA\",\"ENCODER\"];\n    const stringToDecrpytTo = decryptedWords.join(\"\");\n    const totalStringLength = stringToDecrpytTo.length;\n\n    let decryptedLength = 0;\n    let framesElapsed = 0;\n    let animationFrameID: number;\n\n    const decryptingText = (): void=>{\n      framesElapsed++;\n      const decryptCharacterInThisFrame = (framesElapsed % 4 === 0) ? true : false;\n      if( decryptedLength >= totalStringLength ){\n        this.textDecrypted = true;\n        cancelAnimationFrame(animationFrameID);\n      }else{\n        if(decryptCharacterInThisFrame){\n          const decryptedCharacterIndex = decryptedLength;\n          const decryptedString = stringToDecrpytTo.substring(0, decryptedCharacterIndex+1);\n          decryptedLength++;\n          const encryptedString = getRandomBit(totalStringLength - decryptedLength);\n          const newTargetString = decryptedString + encryptedString;\n          bannerWords.forEach( (bannerWord, wordIndex) => {\n            const bannerWordStartIndex = stringToDecrpytTo.indexOf(decryptedWords[wordIndex]);\n            const bannerWordEndIndex = bannerWordStartIndex + decryptedWords[wordIndex].length;\n            bannerWord.innerHTML = newTargetString.substring(bannerWordStartIndex,bannerWordEndIndex);\n          })\n        }\n        animationFrameID = requestAnimationFrame(decryptingText);\n      }\n    }\n    decryptingText();\n  }\n  \n  drawSignaLikeBorders = (): void => {\n    const shadowRoot = this.shadowRoot as ShadowRoot;\n    const bannerWords = shadowRoot?.querySelectorAll(\".landing-text-word\");\n    requestAnimationFrame(()=>{\n      for (let wordIndex = 0; wordIndex < bannerWords.length; wordIndex++) {\n        bannerWords[wordIndex].classList.add(\"draw-borders\");\n      }\n    })\n  }\n\n  showNextButton = () => {\n    if(!this.textDecrypted) {\n      requestAnimationFrame(this.showNextButton);\n    }else{\n      const nextButton = this.shadowRoot?.getElementById(\"next-button\") as HTMLButtonElement;\n      nextButton.classList.add(\"pop-out\");\n    }\n  }\n\n  render = (): void => {\n    this.showDecryptingText();\n    this.drawSignaLikeBorders();\n    this.showNextButton();\n  }\n\n}\n\nexport { LandingBanner }",null,"import { appWrapperContent } from \"./appWrapperContent\";\nimport { Events } from '../utils';\n\nclass AppWrapper extends HTMLElement{\n\n  private domContent: string = appWrapperContent;\n\n  constructor() {\n    super();\n    this.bindDomContent();\n    this.bindListeners();\n  }\n\n  bindDomContent = (): void => {\n    const contentTemplate = document.createElement(\"template\");\n    contentTemplate.innerHTML = this.domContent;\n    const shadowRoot = this.attachShadow({mode: \"open\"});\n    shadowRoot.appendChild(contentTemplate.content.cloneNode(true));\n  }\n\n  bindListeners = (): void => {\n    this.addEventListener(Events.ActiveChildChange,((event: CustomEvent)=>{\n      const eventSource: HTMLElement = event.detail.sourceElement;\n      eventSource.setAttribute(\"isHidden\",\"true\");\n    }) as EventListener)\n  }\n\n  connectedCallback() {\n\n  }\n\n}\n\nexport { AppWrapper }","export enum BreadCrumb{\n  LandingBanner = \"LandingBanner\",\n  StreamLengthForm = \"StreamLengthForm\",\n  StreamBitForm = \"StreamBitForm\",\n  EncoderScreen = \"EncoderScreen\"\n}\n\nexport const BreadCrumbItems = {\n  [BreadCrumb.LandingBanner]:{\n    id: BreadCrumb.LandingBanner,\n    index: \"1\",\n    title: \"Welcome\",\n    description: \"An interactive digital data encoder.\"\n  },\n  [BreadCrumb.StreamLengthForm]:{\n    id: BreadCrumb.StreamLengthForm,\n    index: \"2\",\n    title: \"Length\",\n    description: \"Enter the number of bits in the stream.\"\n  },\n  [BreadCrumb.StreamBitForm]:{\n    id: BreadCrumb.StreamBitForm,\n    index: \"3\",\n    title: \"Stream\",\n    description: \"Enter the bits in the data stream.\"\n  },\n  [BreadCrumb.EncoderScreen]:{\n    id: BreadCrumb.EncoderScreen,\n    index: \"4\",\n    title: \"Encodings\",\n    description: \"Line Encodings of the data stream\"\n  }\n}","//@ts-ignore\nimport breadCrumbStyles from 'bundle-text:./breadCrumb.scss';\nimport { BreadCrumb, BreadCrumbItems } from './constants';\n\nconst { \n  [BreadCrumb.LandingBanner]: landingBanner,\n  [BreadCrumb.StreamLengthForm]: streamLengthForm,\n  [BreadCrumb.StreamBitForm]: streamBitForm,\n  [BreadCrumb.EncoderScreen]: encoderScreen,\n}= BreadCrumbItems;\n\nconst breadCrumbContent = `\n  <style>\n    ${breadCrumbStyles}\n  </style>\n  <div class=\"crumb-wrapper\">\n    <div class=\"crumb-item\" id=${landingBanner.id} active>\n      <div class=\"crumb-item-index\"> ${landingBanner.index} </div>\n      <div class=\"crumb-item-title\"> ${landingBanner.title}</div>\n      <div class=\"crumb-item-desc\"> ${landingBanner.description}</div>\n    </div>\n    <div class=\"crumb-item\" id=${streamLengthForm.id} >\n      <div class=\"crumb-item-index\"> ${streamLengthForm.index} </div>\n      <div class=\"crumb-item-title\"> ${streamLengthForm.title}</div>\n      <div class=\"crumb-item-desc\"> ${streamLengthForm.description}</div>\n    </div>\n    <div class=\"crumb-item\" id=${streamBitForm.id} >\n      <div class=\"crumb-item-index\"> ${streamBitForm.index} </div>\n      <div class=\"crumb-item-title\"> ${streamBitForm.title}</div>\n      <div class=\"crumb-item-desc\"> ${streamBitForm.description}</div>\n    </div>\n    <div class=\"crumb-item\" id=id=${encoderScreen.id} >\n      <div class=\"crumb-item-index\"> ${encoderScreen.index} </div>\n      <div class=\"crumb-item-title\"> ${encoderScreen.title}</div>\n      <div class=\"crumb-item-desc\"> ${encoderScreen.description}</div>\n    </div>\n\n  </div>\n`;\n\nexport { breadCrumbContent }",null,"import { breadCrumbContent } from './breadCrumbContent';\n\nclass BreadCrumb extends HTMLElement{\n\n  private domContent: string = breadCrumbContent;\n\n  constructor() {\n    super();\n    this.bindDomContent();\n  }\n\n  bindDomContent = () => {\n    const contentTemplate = document.createElement(\"template\");\n    contentTemplate.innerHTML = this.domContent;\n    const shadowRoot = this.attachShadow({mode: \"open\"});\n    shadowRoot.appendChild(contentTemplate.content.cloneNode(true));\n  }\n\n}\n\nexport { BreadCrumb };","import { AppWrapper } from './components/AppWrapper/AppWrapper';\nimport { LandingBanner } from \"./components/LandingBanner/LandingBanner\";\nimport { BreadCrumb } from './components/BreadCrumb/BreadCrumb';\n\ncustomElements.define(\"app-wrapper\", AppWrapper);\ncustomElements.define(\"landing-banner\", LandingBanner);\ncustomElements.define(\"bread-crumb\", BreadCrumb);"],"names":["$parcel$interopDefault","a","__esModule","default","mapping","pairs","keys","Object","i","length","$c2c7fbc8b68410859ec0d9fc415444c7$export$register","JSON","parse","Events","LandingBanner","_this","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_classCallCheck","this","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_defineProperty","$f7ec59c0918eec2aa3c922d80c1a1bd$var$_assertThisInitialized","_super","call","$a0531ed6a0e23efdcb2a2d7ca37a64bb$export$landingBannerContent","contentTemplate","document","createElement","innerHTML","domContent","attachShadow","mode","appendChild","content","cloneNode","_this$shadowRoot","shadowRoot","querySelector","addEventListener","_this$parentElement","activeChildChangeEvent","CustomEvent","$f34b5c202e98aec6fbfcc848d8d1018$export$Events","ActiveChildChange","detail","sourceElement","parentElement","dispatchEvent","animationFrameID","bannerWords","querySelectorAll","decryptedWords","stringToDecrpytTo","join","totalStringLength","decryptedLength","framesElapsed","decryptingText","decryptCharacterInThisFrame","textDecrypted","cancelAnimationFrame","decryptedCharacterIndex","decryptedString","substring","newTargetString","stringLength","randomString","Math","floor","random","$f34b5c202e98aec6fbfcc848d8d1018$export$getRandomBit","forEach","bannerWord","wordIndex","bannerWordStartIndex","indexOf","bannerWordEndIndex","requestAnimationFrame","classList","add","_this$shadowRoot2","getElementById","showNextButton","showDecryptingText","drawSignaLikeBorders","bindDomContent","bindListeners","render","HTMLElement","AppWrapper","self","$d332527a228a3dbfd3b615532$var$_wrapNativeSuper","Class","_cache","Map","undefined","eventSource","TypeError","has","$d332527a228a3dbfd3b615532$var$_construct","constructor","Wrapper","prototype","create","value","enumerable","configurable","$d332527a228a3dbfd3b615532$var$_setPrototypeOf","event","setAttribute","$d332527a228a3dbfd3b615532$var$_isNativeReflectConstruct","BreadCrumb","BreadCrumbItems","$c036a622f76df6922b30a00f6035a$var$_defineProperty","$c036a622f76df6922b30a00f6035a$var$_BreadCrumbItems","id","index","title","description","StreamLengthForm","StreamBitForm","EncoderScreen","landingBanner","$c036a622f76df6922b30a00f6035a$export$BreadCrumb","streamLengthForm","streamBitForm","encoderScreen","breadCrumbContent","concat","$d76be9c3cb8d2bcc6b2401c462fea4$$interop$default","$f3661d3515bca66de916616782f0706f$var$_classCallCheck","$f3661d3515bca66de916616782f0706f$var$_defineProperty","$f3661d3515bca66de916616782f0706f$var$_assertThisInitialized","$a67808bdaef49bf99f0cae76ed2c50$export$breadCrumbContent","customElements","define","$d332527a228a3dbfd3b615532$export$AppWrapper","$f7ec59c0918eec2aa3c922d80c1a1bd$export$LandingBanner","$f3661d3515bca66de916616782f0706f$export$BreadCrumb"],"version":3,"file":"ts.f18fed7e.js.map"}